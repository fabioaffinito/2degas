1. why ntype doesnt work as shared?
2. Subroutine flow
- input
- sonaseppia
	sigma
	vmc
end

3. reptation.f90/subroutine restart
Why doesnt this fail for nproc > 8*mproc ? (mproc=16)
           integer seed_tot(8*mproc)
           do i=1,nproc
              read(8,*)(seed_tot(j),j=8*(i-1)+1,8*(i-1)+8) ! why doesnt this fail for nproc>8*16 ?
           enddo
In fact with -check it gives an error. On DEEP it doesnt compile
(may have to make seed_tot allocatable)
See also this link: 
https://software.intel.com/en-us/forums/intel-fortran-compiler-for-linux-and-mac-os-x/topic/270714

4. check SAVE variables, esp in two_body. For OMP these are shared by default. 
5. floating point exception in slater excitations, reptation 5436. Problem with p_new

6. REstart from second thread is wrong. Look at line 458. Properties are wrong
7. Restart files should be written with OMP CRITICAL. Now crashes only after 10 steps.
Note that this will slow the program down alot for many threads. Reconsider this bit.
(MCDRAM of KNL?). Also perhaps omp_set_lock?
8. OMP Critical inserted in read_conf. still crashes. omp barrier inserted just before main loop. program now seems to work.
9. Consider adding threadprivate for all SAVE variables
10. implemented reduce in averages routine
11. Works *only on node168*. I think related to stack but cannot prove it. Try to reduce local,automatic variables.
- reduce mstack from 10,000 -> 3000
before change
size rept90-omp.x
   text    data     bss     dec     hex filename
1777061   82296 279223472       281082829       10c0fbcd        rept90-omp.x

after

ize rept90-omp.x
   text    data     bss     dec     hex filename
1777061   82296 103103216       104962573       6419a0d rept90-omp.x

RESULT: still doesnt work on *node169* for example

12:  Solution: make threadprivate also variables such as zorb and those involved in the matrix inversion	
13. STill need to implement mpi_gather in reptation.f90 line 1318 restart
(git push -u origin omp)

14. Experiment with mkl threads - see job.pbs for example. Also nested OpenMP. In three_body maybe able to parallelise loops within each walker.

15. Vtune analysis at 16 threads indicate:
- time is lost ("spin time") in the critical region for reading the task-local restart files
- 12% of the total time is spent just initializing a variable to 0.0!

